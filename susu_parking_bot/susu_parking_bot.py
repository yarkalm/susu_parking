import telebot
from telebot import types

# –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∑–¥–µ—Å—å
bot = telebot.TeleBot('6817205700:AAHNTW6icsiEs9um5DYZhNSTR49vdzc-cOw')
lang = True  # True - –†—É—Å—Å–∫–∏–π, False - English
photo_types = {"ru_ann": "üì∏–§–æ—Ç–æ",
               "en_ann": "üì∏Send annotated photo",
               "ru_box": "üü©–ë–æ–∫—Å—ã",
               "en_box": "üü©Send boxes photo",
               "ru_ic": "üÖø–ò–∫–æ–Ω–∫–∏",
               "en_ic": "üÖøSend icons photo"}
types_to_photo = {value: key for key, value in photo_types.items()}


@bot.message_handler(commands=['start'])
def start(message):
    print('start')
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(
        text='Unlock ¬∑ IT-–∫–æ–º—å—é–Ω–∏—Ç–∏',
        url='https://vk.com/unlockit.space')
    markup.add(btn1)

    menu = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    c1 = types.KeyboardButton('–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' if lang else 'Welcome')  # –ó–∞–º–µ–Ω–∞ /start
    c2 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∫–æ–≤–∫—É' if lang else 'Show parking')  # –ó–∞–º–µ–Ω–∞ /parking
    c3 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫' if lang else 'Change language')  # –ó–∞–º–µ–Ω–∞ /lang
    menu.add(c1, c2, c3)

    bot.send_message(message.from_user.id,
                     'üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –±–ª–∞–≥–æ–¥–∞—Ä—è "–ê –ø–æ–Ω—ã—Ç—å?" –æ—Ç Unlock. –ë–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –≤–∞–º —Å–≤–æ–±–æ–¥–Ω—ã–µ '
                     '–º–µ—Å—Ç–∞ –Ω–∞ –ø–∞—Ä–∫–æ–≤–∫–µ –ì–£–ö –Æ–£—Ä–ì–£.' if lang else "üëãGreetings! This bot was created thanks to 'And "
                                                                 "whine?' from Unlock. The bot will show you the "
                                                                 "available parking spaces at the SUSU.",
                     reply_markup=markup)

    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ" if lang else 'Choose action',
        reply_markup=menu
    )


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–µ–Ω—é
@bot.message_handler(commands=['parking'])
def parking(message):
    print('parking')
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
    start_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    annotated = types.KeyboardButton(
        photo_types['ru_ann'] if lang else photo_types['en_ann'])  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–º–µ—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    parking_bboxes = types.KeyboardButton(
        photo_types['ru_box'] if lang else photo_types['en_box'])  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–º–µ—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    parking_icons = types.KeyboardButton(
        photo_types['ru_ic'] if lang else photo_types['en_ic'])  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–º–µ—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    start_markup.add(annotated, parking_bboxes, parking_icons)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –≤ –º–µ–Ω—é
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø" if lang else "Choose type",
        reply_markup=start_markup
    )


@bot.message_handler(commands=['lang'])
def choose_lang(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    rus = types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
    eng = types.KeyboardButton("üá¨üáß English")
    markup.add(rus, eng)
    bot.send_message(
        message.chat.id,
        "üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language",
        reply_markup=markup
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@bot.message_handler(func=lambda message: message.text in ["üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá¨üáß English"])
def handle_language_choice(message):
    print('lang')
    global lang
    if message.text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π":
        bot.send_message(message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫. –ü—Ä–∏–≤–µ—Ç!")
        lang = True
    elif message.text == "üá¨üáß English":
        lang = False
        bot.send_message(message.chat.id, "You chose English. Hello!")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é
@bot.message_handler(
    func=lambda message: message.text in ["–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∫–æ–≤–∫—É", "–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", "Welcome",
                                          "Show parking", "Change Language"])
def handle_menu_buttons(message):
    if (message.text == "–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ") or (message.text == "Welcome"):
        start(message)  # –≤—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /start
    elif (message.text == "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∫–æ–≤–∫—É") or (message.text == "Show parking"):
        parking(message)  # –≤—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /parking
    elif (message.text == "–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫") or (message.text == "Change language"):
        choose_lang(message)  # –≤—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /lang


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –ø–æ –∫–Ω–æ–ø–∫–µ –≤ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text in photo_types.values())
def send_photo(message):
    print("send_photo")
    # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    annotated_image = '../result_images/annotated_frame.jpg'
    parking_boxes = '../result_images/parking_boxes.jpg'
    parking_lots = '../result_images/parking_lots.jpg'
    orig_image = '../result_images/frame.jpg'

    type_image = types_to_photo[message.text].split('_')[1]

    if type_image == 'ann':
        image = annotated_image
    elif type_image == 'box':
        image = parking_boxes
    elif type_image == 'ic':
        image = parking_lots
    else:
        image = orig_image

    try:
        with open(image, 'rb') as photo:
            bot.send_photo(message.chat.id, photo)
    except FileNotFoundError:
        bot.send_message(message.chat.id,
                         "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç." if lang else 'Sorry. '
                                                                                                            'File is '
                                                                                                            'not found')


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
bot.polling()
